// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Timetable {
  id               String     @id @default(uuid())
  date             DateTime
  name             String
  sharedBy         String?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @default(now())
  owner            User?      @relation("Owner", fields: [ownerId, ownerName], references: [id, name])
  ownerName        String?
  ownerId          String?
  sharedWith       User[]     @relation("SharedWith")
  sharedWithEmails String[]
  Timeslot         Timeslot[] @relation("Timetable")
  description      String?
}

model Timeslot {
  id          String    @id @default(uuid())
  title       String
  startTime   DateTime
  endTime     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  timetable   Timetable @relation("Timetable", fields: [timetableId], references: [id], onDelete: Cascade)
  timetableId String
}

model User {
  id               String      @id @default(uuid())
  email            String      @unique
  name             String?
  password         String
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @default(now())
  timetables       Timetable[] @relation("Owner")
  sharedTimetables Timetable[] @relation("SharedWith")

  @@unique([name, id])
}
